import pathlib
from factorworld.variables import Paths


METAWORLD_ASSET_DIR_V2 = Paths.MetaworldDir / "envs" / "assets_v2"
FACTORWORLD_ASSETS_DIR = Paths.FactorworldDir / "envs" / "assets"


def full_metaworld_assets_v2_path_for(filename: str) -> str:
    return str(METAWORLD_ASSET_DIR_V2 / filename)


def full_factorworld_assets_path_for(filename: str) -> str:
    return str(FACTORWORLD_ASSETS_DIR / filename)


def last_common_dir(fp1: pathlib.Path, fp2: pathlib.Path) -> pathlib.Path:
    """Find the last common directory between two filepaths"""
    common_parts = []
    for part1, part2 in zip(fp1.parts, fp2.parts):
        if part1 == part2:
            common_parts.append(part1)
        else:
            break

    return pathlib.Path(*common_parts)


def inverse_rel_path(rel_path: pathlib.Path):
    """
    Input: A relative path from X to Y e.g. a/b/c
      - X would be a subpath of Y
      - This is generated by pathlib.Path.relative_to

    Output: A relative path from Y to X
      - I.e. just "../" x however many parts there were in the rel path
    """
    inverse_path_parts = []
    for _ in rel_path.parts:
        inverse_path_parts.append("..")

    return pathlib.Path(*inverse_path_parts)


def get_fw_asset_dir_relative_to_mw_asset_dir():
    mw = METAWORLD_ASSET_DIR_V2
    fw = FACTORWORLD_ASSETS_DIR
    lcd = last_common_dir(FACTORWORLD_ASSETS_DIR, METAWORLD_ASSET_DIR_V2)
    lcd_to_mw = mw.relative_to(lcd)
    lcd_to_fw = fw.relative_to(lcd)
    mw_to_lcd = inverse_rel_path(lcd_to_mw)
    mw_to_fw = mw_to_lcd / lcd_to_fw
    return mw_to_fw
